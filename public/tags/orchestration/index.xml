<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Orchestration on @h12</title>
    <link>http://h12.io/tags/orchestration/</link>
    <description>Recent content in Orchestration on @h12</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en-us</language>
    <copyright>2012-2025, Hǎi-Liàng &amp;ldquo;Hal&amp;rdquo; Wáng.</copyright>
    <lastBuildDate>Fri, 14 Dec 2018 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://h12.io/tags/orchestration/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Run: Graceful Goroutine Orchestration</title>
      <link>http://h12.io/project/run/</link>
      <pubDate>Fri, 14 Dec 2018 00:00:00 +0000</pubDate>
      <guid>http://h12.io/project/run/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://godoc.org/h12.io/run&#34;&gt;&lt;img alt=&#34;GoDoc&#34; loading=&#34;lazy&#34; src=&#34;https://godoc.org/h12.io/run?status.svg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;While Go provides goroutines, channels and selects as first-class citizens to
support concurrent programming, it is not trivial to combine these elements
to address important concerns of goroutine orchestration, e.g. error handling,
panic recovery, goroutine leak prevention, goroutine reuse, goroutine throttle
and logging.&lt;/p&gt;
&lt;p&gt;The package provides a mini-framework to address those cross-cutting concerns.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;Quick start&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;go get -u h12.io/run
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is an example illustrating the usage of the goroutine pool and the group.
The task is described in the &amp;ldquo;Google Search 2.0&amp;rdquo; page from &lt;a href=&#34;https://talks.golang.org/2012/concurrency.slide#46&#34;&gt;this slide&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
