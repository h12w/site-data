<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Kafka on @h12</title>
    <link>http://h12.io/tags/kafka/</link>
    <description>Recent content in Kafka on @h12</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en-us</language>
    <copyright>2012-2025, Hǎi-Liàng &amp;ldquo;Hal&amp;rdquo; Wáng.</copyright>
    <lastBuildDate>Sat, 14 Nov 2015 13:57:09 +0800</lastBuildDate>
    <atom:link href="http://h12.io/tags/kafka/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RealTest: real test environment for Go</title>
      <link>http://h12.io/project/realtest/</link>
      <pubDate>Sat, 14 Nov 2015 13:57:09 +0800</pubDate>
      <guid>http://h12.io/project/realtest/</guid>
      <description>&lt;p&gt;h12.io/realtest provides real test environment for Go unit testing, based on Docker.&lt;/p&gt;
&lt;p&gt;Includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Queue
&lt;ul&gt;
&lt;li&gt;Kafka cluster (with zookeeper)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Database:
&lt;ul&gt;
&lt;li&gt;MySQL&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cache
&lt;ul&gt;
&lt;li&gt;Redis&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Configuration service
&lt;ul&gt;
&lt;li&gt;ZooKeeper&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    <item>
      <title>kpax: a modular &amp; idiomatic Kafka client in Go</title>
      <link>http://h12.io/project/kpax/</link>
      <pubDate>Thu, 23 Jul 2015 13:36:25 +0800</pubDate>
      <guid>http://h12.io/project/kpax/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://godoc.org/h12.io/kpax&#34;&gt;&lt;img alt=&#34;GoDoc&#34; loading=&#34;lazy&#34; src=&#34;https://godoc.org/h12.io/kpax?status.svg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;install&#34;&gt;Install&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;go get -u h12.io/kpax
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;talk&#34;&gt;Talk&lt;/h2&gt;
&lt;p&gt;I gave a talk about Kpax at Gopher Meetup Shanghai 2016. See the &lt;a href=&#34;https://h12.io/slide/kpax&#34;&gt;slides&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;design&#34;&gt;Design&lt;/h2&gt;
&lt;p&gt;The client is built on top of Kafka Wire Protocol (i.e. low-level API). The protocol related types &amp;amp; marshal/unmarshal functions are automatically generated by &lt;a href=&#34;https://github.com/h12w/wipro&#34;&gt;wipro&lt;/a&gt; from &lt;a href=&#34;https://cwiki.apache.org/confluence/display/KAFKA/A+Guide+To+The+Kafka+Protocol&#34;&gt;the HTML spec&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;(-)&lt;/code&gt; means to be done.&lt;/p&gt;
&lt;h3 id=&#34;sub-packages&#34;&gt;Sub packages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;model&lt;/strong&gt; is an abstraction model for request, response, broker and cluster&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;broker&lt;/strong&gt; is a lazy, asynchronous and recoverable round tripper that talks to a single Kafka broker&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cluster&lt;/strong&gt; is a metadata manager that talks to a Kafka cluster&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;proto&lt;/strong&gt; contains both low level API and a &amp;ldquo;middle&amp;rdquo; level facade&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;producer&lt;/strong&gt;: fault tolerant high-level producer (batching and partitioning strategy)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;consumer&lt;/strong&gt;: fault tolerant high-level consumer (consumer group and offset commit)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;log&lt;/strong&gt;: replaceable global logger&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cmd&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;kpax&lt;/strong&gt;: command line tool to help with Kafka programming&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;compatibility&#34;&gt;Compatibility&lt;/h3&gt;
&lt;p&gt;Compatible with Kafka Server 0.8.2.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
