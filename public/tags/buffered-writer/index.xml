<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Buffered Writer on @h12</title>
    <link>http://h12.io/tags/buffered-writer/</link>
    <description>Recent content in Buffered Writer on @h12</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>en-us</language>
    <copyright>2012-2025, Hǎi-Liàng &amp;ldquo;Hal&amp;rdquo; Wáng.</copyright>
    <lastBuildDate>Sun, 22 Nov 2020 17:38:34 +0000</lastBuildDate>
    <atom:link href="http://h12.io/tags/buffered-writer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go Pattern: Buffered Writer</title>
      <link>http://h12.io/article/go-pattern-buffered-writer/</link>
      <pubDate>Sun, 22 Nov 2020 17:38:34 +0000</pubDate>
      <guid>http://h12.io/article/go-pattern-buffered-writer/</guid>
      <description>&lt;p&gt;A buffered writer is so ubiquitous that we do not usually consider it as a pattern, but sometimes we reinvent it or even do it in an inferior way. Let us look at a real use case first.&lt;/p&gt;
&lt;h2 id=&#34;batch-processor&#34;&gt;Batch processor&lt;/h2&gt;
&lt;p&gt;What would you do to improve the throughput of a service? The answer is short: batching.&lt;/p&gt;
&lt;p&gt;By processing and sending in a batch of multiple items instead of a single item at a time, you are amortizing the network overhead from the request-response round trip among all the items in the batch.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
